#include "../Shaders/DepthOfFieldCommon.hlsl"

#pragma kernel DOFPreCombine

#define GROUP_SIZE 8

TEXTURE2D(_InputTexture);
TEXTURE2D(_InputFarTexture);
TEXTURE2D(_InputCoCTexture);
RWTexture2D<float3> _OutputTexture;
float4 _TargetScale;

[numthreads(GROUP_SIZE, GROUP_SIZE, 1)]
void DOFPreCombine(uint3 dispatchThreadId : SV_DispatchThreadID) {
	float2 uv = dispatchThreadId.xy / ((_CameraBufferSize.zw - 1) * _TargetScale.y);
	float2 texelSize = _CameraBufferSize.xy * _TargetScale.x;
	float3 finalColor = 0.0;
	float3 baseColor = SAMPLE_TEXTURE2D_LOD(_InputTexture, sampler_linear_clamp, uv, 0).xyz;
	float3 farColor = SAMPLE_TEXTURE2D_LOD(_InputFarTexture, sampler_linear_clamp, uv, 0).xyz;
	float3 dstColor = 0.0;
	float3 dstAlpha = 1.0;
	float coc = SAMPLE_TEXTURE2D_LOD(_InputCoCTexture, sampler_linear_clamp, uv, 0).x;
	if (coc > 0.0) {
		//no-linear blend from "CryEngine 3 Graphics Gems" [Sousa13]
		float blend = sqrt(coc * Two_PI * 2.0);
		dstColor = farColor * saturate(blend);
		dstAlpha = saturate(1.0 - blend);
	}
	finalColor = baseColor * dstAlpha + dstColor;
	_OutputTexture[dispatchThreadId.xy] = finalColor;
}
